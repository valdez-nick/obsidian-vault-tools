[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "obsidian-librarian"
version = "0.1.0"
description = "An intelligent content management system for Obsidian vaults"
authors = [
    {name = "Obsidian Librarian Team", email = "team@obsidian-librarian.dev"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Office/Business",
    "Topic :: Text Processing :: Markup",
    "Topic :: Utilities",
]
keywords = ["obsidian", "note-taking", "knowledge-management", "markdown", "ai"]

dependencies = [
    # Web framework and async
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "httpx>=0.25.0",
    
    # CLI and UI
    "typer[all]>=0.9.0",
    "rich>=13.7.0",
    
    # AI and ML
    "langchain>=0.0.350",
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    
    # Vector database and search
    "qdrant-client>=1.6.0",
    
    # Database
    "duckdb>=0.9.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    
    # Redis and caching
    "redis>=5.0.0",
    "aioredis>=2.0.0",
    "hiredis>=2.2.0",
    
    # Web scraping and content
    "aiohttp>=3.9.0",
    "beautifulsoup4>=4.12.0",
    "html2text>=2020.1.16",
    "trafilatura>=1.6.0",
    
    # Data processing
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-multipart>=0.0.6",
    
    # File handling and templating
    "aiofiles>=23.2.0",
    "python-frontmatter>=1.0.0",
    "jinja2>=3.1.0",
    "watchdog>=3.0.0",
    
    # Utilities
    "python-dateutil>=2.8.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "PyYAML>=6.0",
    
    # Version control
    "GitPython>=3.1.40",
    
    # Async and concurrency
    "asyncio-throttle>=1.0.0",
    
    # Monitoring and logging
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
    "faker>=20.1.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/obsidian-librarian/obsidian-librarian"
Repository = "https://github.com/obsidian-librarian/obsidian-librarian"
Documentation = "https://obsidian-librarian.readthedocs.io"
"Bug Tracker" = "https://github.com/obsidian-librarian/obsidian-librarian/issues"

[project.scripts]
obsidian-librarian = "obsidian_librarian.__main__:app"

[tool.maturin]
features = ["pyo3/extension-module"]
module-name = "obsidian_librarian._core"
python-source = "python"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "-q", 
    "--strict-markers",
    "--strict-config",
    "--cov=obsidian_librarian",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "performance: Performance tests",
    "slow: Slow tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["obsidian_librarian"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
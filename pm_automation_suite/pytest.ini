[pytest]
# pytest configuration for PM Automation Suite

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Test paths
testpaths = tests
addopts = 
    # Verbose output
    -v
    # Show local variables in tracebacks
    -l
    # Show captured stdout calls
    -s
    # Strict markers
    --strict-markers
    # Show slowest 10 tests
    --durations=10
    # Enable all warnings
    -W default
    # Coverage options
    --cov=pm_automation_suite
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    # Fail on first failure (remove for full test runs)
    # -x
    # Run tests in parallel (adjust number based on CPU cores)
    # -n auto
    # Show percentage progress
    --tb=short
    # Colorful output
    --color=yes

# Markers for organizing tests
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may require external services)
    slow: Slow tests (>5 seconds)
    api: API endpoint tests
    connector: Data connector tests
    ai: AI/ML related tests
    scheduler: Scheduler and orchestration tests
    security: Security-related tests
    smoke: Smoke tests (critical functionality)
    regression: Regression tests
    performance: Performance tests
    wip: Work in progress (skip in CI)

# Coverage settings
[coverage:run]
source = pm_automation_suite
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */migrations/*
    */config/*
    setup.py

[coverage:report]
# Minimum coverage percentage
fail_under = 80
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

# Pytest plugins configuration
[tool:pytest]
# Asyncio settings
asyncio_mode = auto

# Timeout for tests (in seconds)
timeout = 300

# Log settings
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] [%(name)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] [%(name)s] %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Capture settings
capture = no

# Doctest settings
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL

# Warning filters
filterwarnings =
    # Ignore deprecation warnings from third-party libraries
    ignore::DeprecationWarning:google.*
    ignore::DeprecationWarning:pandas.*
    # Convert our own deprecation warnings to errors
    error::DeprecationWarning:pm_automation_suite.*
    # Ignore specific warnings
    ignore::ResourceWarning
    ignore::ImportWarning

# Environment variables for tests
env =
    ENVIRONMENT = test
    LOG_LEVEL = DEBUG
    DATABASE_URL = sqlite:///:memory:
    REDIS_URL = redis://localhost:6379/15
    TESTING = true

# Custom pytest options
[pytest:ini]
# Minimum Python version
minversion = 3.8

# Require these plugins
required_plugins = 
    pytest-asyncio>=0.21.0
    pytest-cov>=4.1.0
    pytest-mock>=3.12.0
    pytest-timeout>=2.1.0
    pytest-env>=0.8.0

# Fixture settings
usefixtures = 
    # Add any global fixtures here

# Test output settings
console_output_style = progress
junit_family = xunit2

# Test report settings
junit_suite_name = PM Automation Suite Tests
junit_logging = all
junit_log_passing_tests = true